Generalization,
Realization,
InterfaceRealization,
ComponentRealization,
Substitution {
	targetDecoration: whiteArrow;
	targetDecorationFillColor: white; 
}

Extension {
	targetDecoration: closedArrow;
}

Dependency,
Usage,
Abstraction,
Manifestation,
ElementImport,
PackageImport,
PackageImport,
Representation,
InformationFlow,
Transition, 
ControlFlow,
ObjectFlow,
ExceptionHandler,
Deployment,
Include, 
Extend {
	targetDecoration: openArrow;
}

Message[messageSort=reply],
Message[messageSort=syncCall],
Message[messageSort=deleteMessage]{
	targetDecoration: blackArrow;
}

Message[messageSort=asyncCall]{
	targetDecoration: openArrow;
}

Message[messageSort=asyncSignal] {
	/*TODO*/
}

Connector[type="Element_ContainmentEdge"] { /* TODO Selector (Shouldn't use internal ID) */
	sourceDecoration: crossCircle;
	rotateWithLink: false; /* The decoration is a circle, there is no need to adjust it to match the link orientation */
}

Dependency,
Abstraction,
Realization,
InterfaceRealization {
	lineType: Dash;
}

ContextLink,
CommentLink,
ConstraintLink {
	/* Use higher density dash for these links */
	lineType: Custom;
	lineDashLength: 5;
	lineDashGap: 3;
}

/*State,
StateMachine {
	radiusHeight: 5px;
	radiusWidth: 5px;
}*/
